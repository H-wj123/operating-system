문제1
실린더가 500개, 실린더 당 트랙수가 8, 트랙 당 섹터수가 4000, 섹터 크기가 512바이트일 때 다음 물음에 답하라.
1) 이 디스크는 몇 개의 플래터를 가지고 있는가?
 실린더 당 트랙 수가 8개라는 것은, 각 실린더(동일한 반경을 가진 트랙들의 집합)가 8개의 트랙으로 구성된다는 의미이므로,
 실린더 당 8개의 트랙이 있다면, 이는 8개의 헤드가 필요하고, 플래터의 양면을 사용한다고 가정했을 때, 4개의 플래터가 필요합니다.
  답: 4개
2) 이 디스크의 헤드 수는 몇 개인가?
 실린더 당 트랙 수가 8개이므로, 각 트랙에 하나씩 할당되는 헤드 수는 8개입니다.
   답: 8개
(3) 이 디스크에는 총 몇 개의 트랙이 있는가?
 총 트랙 수 = 실린더 수 X 실린더 당 트랙 수 = 5000 X 8 = 40000
    답: 40000개
(4) 트랙 당 저장 용량은 얼마인가?
 트랙 당 저장 용량 = 트랙 당 섹터 수 X 섹터 크기= 4000 (섹터/트랙) X 512 (바이트/섹터)
 트랙 당 저장 용량 = 2,048,000 { 바이트}
    답: 2,048,000 바이트 (또는 2000 KB 또는 약 1.95 MB)
(5) 이 디스크의 총 용량은 얼마인가?
 총 용량 = 총 트랙 수 X 트랙 당 크기 = 40000 (트랙) X 2,048,000  (바이트/트랙)
 총 용량 = 80,192,000,000 \text{ 바이트}   답: 80,192,000,000 바이트 (또는 약 76.3 GB)
문제2
다음과 같은 디스크 장치에서 1개 섹터를 읽을 때 걸리는 평균 디스크 액세스 시간과 평균 디스크 입출력 응답 시간을 계산하라
주어진 정보: 디스크 탐색 시간 (평균 탐색 시간): 4ms
                  디스크의 회전 속도: 15000 rpm (분당 회전수)
                  트랙당 섹터 수: 1000개
                  디스크 장치와 호스트사이의 인터페이스 전송 속도: 100MB/s
                  디스크 장치의 오버헤드: 0.1ms
계산 공식:
  1 섹터를 읽는 평균 디스크 액세스 시간: 평균 탐색 시간 + 평균 회전 지연 시간 + 1 섹터의 내부 전송 시간
  1 섹터를 읽는 평균 디스크 입출력 응답 시간: 평균 탐색 시간 + 평균 회전 지연 시간 + 1 섹터의 내부 전송 시간 + 1 섹터의 외부 전송 시간 + 오버헤드 시간
각 구성 요소별 계산:
1) 평균 탐색 시간: 4ms
2) 평균 회전 지연 시간: 디스크의 회전 속도는 15000 rpm입니다.
  1분(60초)에 15000바퀴 회전하므로, 1초당 회전수는 15000 {rpm} / 60 {초/분} = 250 (회전/초} 입니다.
  디스크가 한 바퀴 완전히 회전하는 데 걸리는 시간은 1 {초} / 250{회전/초} = 0.004 {초} = 4 {ms} 입니다.
  평균 회전 지연 시간은 디스크 헤드가 원하는 섹터의 시작 부분에 도달하기까지 기다리는 시간으로, 일반적으로 한 바퀴 회전하는 시간의 절반으로 계산합니다.
  평균 회전 지연 시간 = 0.5 X 4 \text{ms} = 2 {ms}
3) 1 섹터의 내부 전송 시간:
한 트랙에 1000개의 섹터가 있고, 한 트랙을 완전히 읽는 데 4ms가 걸립니다. 따라서 1개 섹터를 내부적으로 전송(읽는)하는 데 걸리는 시간은 전체 트랙 시간에서 섹터 수를 나누어 계산합니다.
 1 섹터의 내부 전송 시간 = 4 {ms} / 1000{섹터} = 0.004{ms}
4) 따라서 1섹터를 읽는데 걸리는 평균 디스크 엑시스 기간은 다음과 같다.
평균 디스크 엑시스 기간 = 4(ms) + 2(ms) + 0.004(ms) = 6.004(ms)
5) 디스크 입출력 응답 시간은 디스크 액세스 시간에 외부 전송 시간과 오버헤드 시간을 모두 합친 것으로 다음과 같이 계산된다
디스크 입출력 응답 시간 = 6.004(ms) + 0.5KB/(100MB/s) + 0.1(ms) = 6.004(ms) + 0.005(ms) + 0.1(ms)
= 7.109(ms)
이 문제는 디스크 스케줄링 알고리즘에 대한 문제로, 각 알고리즘이 요청을 처리하는 순서와 **총 탐색 거리(헤드가 움직인 거리의 합)**를 구하는 것입니다.

문제3
문제 요약:
디스크 실린더: 0번 ~ 99번 (총 100개)
디스크 헤드의 현재 위치: 70
요청된 실린더들: 7, 78, 93, 19, 20, 5, 40, 32, 58, 81
구해야 할 것: 1. SSTF, SCAN, LOOK, C-SCAN, C-LOOK 알고리즘으로 처리될 순서
	           2. 각각의 총 탐색 거리
 FCFS (First Come First Serve)
주어진 순서대로 처리
순서: 7 → 78 → 93 → 19 → 20 → 5 → 40 → 32 → 58 → 81
거리 계산: |70-7| = 63 |7-78| = 71
              |78-93| = 15 |93-19| = 74
              |19-20| = 1 |20-5| = 15
              |5-40| = 35 |40-32| = 8
              |32-58| = 26 |58-81| = 23
총합 = 331
(이 값은 문제에 있는 그래프와 일치)

SSTF (Shortest Seek Time First)
현재 헤드에서 가장 가까운 요청부터 처리
초기 위치: 70
남은 요청: 7, 78, 93, 19, 20, 5, 40, 32, 58, 81
처리 순서:
	1.	70 → 78 (가장 가까움, |70-78| = 8)
	2.	78 → 81 (|78-81| = 3)
	3.	81 → 93 (|81-93| = 12)
	4.	93 → 58 (|93-58| = 35)
	5.	58 → 40 (|58-40| = 18)
	6.	40 → 32 (|40-32| = 8)
	7.	32 → 20 (|32-20| = 12)
	8.	20 → 19 (|20-19| = 1)
	9.	19 → 7 (|19-7| = 12)
	10.	7 → 5 (|7-5| = 2)
거리 합: 8 + 3 + 12 + 35 + 18 + 8 + 12 + 1 + 12 + 2 = 111

SCAN (엘리베이터 알고리즘)
한 방향으로 쭉 가면서 요청 처리 후 방향 바꿈
→ 헤드가 70부터 오른쪽(증가 방향)으로 가정
정렬된 요청:
[5, 7, 19, 20, 32, 40, 58, 70, 78, 81, 93]
오른쪽으로 이동:
70 → 78 → 81 → 93 → 끝 (99까지 간다고 가정)
그 후 왼쪽으로 이동: → 58 → 40 → 32 → 20 → 19 → 7 → 5
실제 요청 처리 순서: 78 → 81 → 93 → 58 → 40 → 32 → 20 → 19 → 7 → 5
거리 계산:
70 → 93 = 23
93 → 5 = 88
총 = 111

LOOK
SCAN과 유사하나, 끝까지 안 가고 요청 있는 곳까지만 이동
순서:
70 → 78 → 81 → 93 → 58 → 40 → 32 → 20 → 19 → 7 → 5
이동 거리:
70 → 93 = 23
93 → 5 = 88
총 = 111
LOOK도 SCAN과 결과 같음 (요청 범위 내에서만 움직이므로)

C-SCAN (Circular SCAN)
한 방향으로만 쭉 가다가 끝에서 처음으로 순간이동, 다시 탐색
정렬된 요청:
[5, 7, 19, 20, 32, 40, 58, 70, 78, 81, 93]
처리 순서 (70부터 오른쪽):    70 → 78 → 81 → 93 → (끝 99 도달)
→ 처음으로 순간이동 (99 → 0)
→ 5 → 7 → 19 → 20 → 32 → 40 → 58
	•	거리:
70 → 93 = 23
93 → 99 = 6
99 → 0 = 99
0 → 58 = 58
총 = 23 + 6 + 99 + 58 = 186

C-LOOK
C-SCAN처럼 한 방향으로만 가지만, 요청이 있는 곳까지만
요청된 실린더 중 가장 큰 값: 93
가장 작은 값: 5
순서:
70 → 78 → 81 → 93 → (순간이동) → 5 → 7 → 19 → 20 → 32 → 40 → 58
	•	거리:
70 → 93 = 23
93 → 5 = 88
총 = 23 + 88 = 111

최종 요약표

알고리즘	처리 순서 예시	총 탐색 거리
FCFS	주어진 순서대로	331
SSTF	가까운 순서	111
SCAN	70→끝→반대방향	111
LOOK	70→끝요청→반대요청	111
C-SCAN	70→끝→순간이동→시작	186
C-LOOK	70→큰쪽→순간이동→작은쪽	111


